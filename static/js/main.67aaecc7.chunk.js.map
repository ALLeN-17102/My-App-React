{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","word","alert","react_default","a","createElement","className","concat","type","role","charAt","toUpperCase","slice","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","style","backgroundColor","newText","showAlert","toLowerCase","split","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.67aaecc7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n    const lower=word.charAt(0).toUpperCase() + word.slice(1);\r\n    return lower;\r\n    }\r\n  return (\r\n   props.alert && <div>\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong> {capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\" /></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\">Disabled</a>\r\n          </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch mx-5 text-${props.mode==='light'?'dark':'light'}`}>\r\n        \r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n            \r\n              // role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n             {props.mode==='light'?'dark':'light'}\r\n            </label>\r\n          </div>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              \r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\r\nNavbar.defaultProps = {\r\n  title: \"Set Title\",\r\n  aboutText: \"Set About\",\r\n};\r\n","import React,{useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log('Up was clicked '+ text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n        // setText(\"You have clicked on handleUpClick\" );\r\n    }\r\n    const handleLowClick=()=>{\r\n        // console.log('Up was clicked '+ text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n        // setText(\"You have clicked on handleUpClick\" );\r\n    }\r\n    const handleClearClick=()=>{\r\n        // console.log('Up was clicked '+ text);\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Clear\",\"success\");\r\n        // setText(\"You have clicked on handleUpClick\" );\r\n    }\r\n    const handleCapitalized=()=>{\r\n        // console.log('Up was clicked '+ text);\r\n        let newText=text.charAt(0).toUpperCase() + text.slice(1);\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Capitalize\",\"success\");\r\n        // setText(\"You have clicked on handleUpClick\" );\r\n    }\r\n   \r\n    const handleOnChange=(event)=>{\r\n        // console.log('On change');\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('Enter Text Here');\r\n    // setText(\"New Text\");\r\n  return (\r\n    <>\r\n     <div className=\"container\">\r\n      <h1>{props.heading}</h1>\r\n\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n        style={{backgroundColor:props.mode==='dark'?'grey':'white'}}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCapitalized}>Capitalized Case</button>\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n    </div>\r\n    </>\r\n   \r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport  { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n\n  \n\n// } from \"react-router-dom\";\n\n\n// let name = \"Shivam\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#112152\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n      document.title = \"My-App: Home : Darkmode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light mode has been enabled\", \"Success\");\n      document.title = \"My-App: Home : Lightmode\";\n    }\n  };\n\n  return (\n    <>\n    {/* <Router> */}\n    \n    <Navbar\n        title=\"My-App\"\n        aboutText=\"About My-App\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n     <div className=\"container my-3\">\n {/* <Switch> */}\n          {/* <Route exact path=\"/about\" >\n            <About />\n          </Route> */}\n\n          {/* <Route exact path=\"/\" > */}\n          <TextForm heading=\"Enter text to analyze\" showAlert={showAlert} />\n          {/* </Route> */}\n          {/* </Switch> */}\n     </div>\n     \n\n        {/* <About/> */}\n   \n     \n    {/* </Router> */}\n     \n      {/* <Navbar/> */}\n    </>\n    // <>\n    // <nav>\n    //   <li>Home</li>\n    //   <li>About</li>\n    //   <li>Contact</li>\n    // </nav>\n    // <img src=\"\" alt=\"\" />\n    // <div>\n    //   <h1>Hello {name}</h1>\n    //   <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorum totam quis, ad est corporis dolore, reiciendis expedita numquam similique esse fugit, eligendi dignissimos voluptatibus at repellat mollitia ipsam! Eos quae aspernatur itaque praesentium expedita pariatur quisquam, in recusandae quasi minus?</p>\n    // </div>\n    // </>\n    // <div className=\"blank\">Lovely</div>\n    // <>\n    // <h1>This is me</h1>\n    // <div className=\"App\">\n\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React with Shivam\n    //     </a>\n    //   </header>\n    // </div>\n    // </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}